using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Typedtree;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.WUI.Reactive
{
    public variant JavascriptAST
    {
        | Sequence { Items : list[JavascriptAST] }
        | If { Cond : JavascriptAST; Body : JavascriptAST; ElseBody : JavascriptAST }
        | JustIf { Cond : JavascriptAST; Body : JavascriptAST }
        | Ternary { Cond : JavascriptAST; Body : JavascriptAST; ElseBody : JavascriptAST }
        | Call { Fun : JavascriptAST; Parameters : list[JavascriptAST]; IsTail : bool }
        | Literal { Value : JavascriptLiteral }
        | Array { Values : list[JavascriptAST] }
        | OpCode { Name : string; }
        | Object { Fields : list[(string * JavascriptAST)] }
        | MethodRef { Obj : JavascriptAST; Method : string }
        | This
        | Empty { 
            Val : string;
            public this() {
                Val = "";
            }
        }
    }
}
