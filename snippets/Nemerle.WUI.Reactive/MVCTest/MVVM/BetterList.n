using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Nemerle.Xml;
using Nemerle.WUI.Reactive;
using System.Xml.Linq;

namespace MVCTest
{
  [Record, ViewModel]
  public class BetterListViewModel
  {
    public ItemToAdd     : string { get; set; }
    public AllItems      : list[string] { get; set; }
    public SelectedItems : list[string] { get; set; }
    
    /*
    public A() : void 
    {
        array[1, 2, 3];
    }
    */
    /*public AddItem() : void
    {
      when (ItemToAdd != "" && AllItems.IndexOf(ItemToAdd) < 0) // Prevent blanks and duplicates
        AllItems.Add(ItemToAdd);
        
      ItemToAdd = ""; // Clear the text box
    }*/
/*
    public RemoveSelected() : void
    {
        
      def b = 1;
      mutable a = 1 + 2;
      a++;
      mutable s1 = "a";
      mutable s2 = "b";
      s1 + s2;      
            
      //AllItems.RemoveAll(SelectedItems);      
      SelectedItems = []; // Clear selection
      
    }*/
    
    public Sort() : void 
    {        
        mutable a = "Hello world";
        def t = Some(a);
        
        def m = match(a.Length) {
        | 11 => $"$a is 11 characters long"
        | _ => $"$a is not 11 characters long"
        }
        match(m) {
        | _ => ()
        }
        
        
        foreach(c in a) {
            def t = c;
            //js console.log(c);        
            /*this.server.GetTime(time => {
                js console.log(time);
            });*/
            foreach(k in a)
                def v = k;
        }
        
        if(a.Length == 11)
            js console.log($"$a is 11 characters long");
        else 
            js console.log($"$a is not 11 characters long");
        
        a = "Nemerle FTW!";
        js console.log($"$a is not 11 characters long, it's actually $(a.Length) characters long");
        
        if(a.Length == 11)
            js console.log($"$a is 11 characters long");
        else {
            js console.log($"$a is not 11 characters long, it's actually $(a.Length) characters long");
        }
            
        this.server.Add(1, 3, result => {
            js console.log(result);
        });
    }
    
    public class Server 
    {
        public GetTime() : string
        {
            DateTime.Now.ToLongDateString();
        }
        
        public Add(a : int, b : int) : int 
        {
            a + b
        }
    }
  }

  public partial module Views
  {
    [View()]
    public BetterListView(viewModel : BetterListViewModel) : XElement
    {
      _ = viewModel;
      xml <# 
        <div class="note" xmlns="">
          <form data-bind="submit:AddItem">
              Add item: <input type="text" data-bind='value:ItemToAdd, valueUpdate: "afterkeydown"' />
              <button type="submit" data-bind="enable: ItemToAdd().length > 0">Add</button>
          </form>
           
          <p>Your values:</p>
          <select multiple="multiple" height="5" data-bind="options:AllItems, selectedOptions:SelectedItems"> </select>
           
          <div>
              <button data-bind="click: RemoveSelected, enable: SelectedItems().length > 0">Remove</button>
              <button data-bind="click: Sort, enable: AllItems().length > 1">Sort</button>
          </div>
        </div>
      #>
    }
  }
}
